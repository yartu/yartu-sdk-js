/**
 * @fileoverview gRPC-Web generated client stub for yartu
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.22.1
// source: drive/grpc/service.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var common_grpc_definitions_pb = require('../utils/definitions_pb.cjs')
const proto = {};
proto.yartu = require('./service-pb.cjs');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.yartu.YDriveClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.yartu.YDrivePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.GetRecentRequest,
 *   !proto.yartu.GetRecentResponse>}
 */
const methodDescriptor_YDrive_getRecent = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/getRecent',
  grpc.web.MethodType.UNARY,
  proto.yartu.GetRecentRequest,
  proto.yartu.GetRecentResponse,
  /**
   * @param {!proto.yartu.GetRecentRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.GetRecentResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.GetRecentRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.GetRecentResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.GetRecentResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.getRecent =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/getRecent',
      request,
      metadata || {},
      methodDescriptor_YDrive_getRecent,
      callback);
};


/**
 * @param {!proto.yartu.GetRecentRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.GetRecentResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.getRecent =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/getRecent',
      request,
      metadata || {},
      methodDescriptor_YDrive_getRecent);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.GetQuotaRequest,
 *   !proto.yartu.GetQuotaResponse>}
 */
const methodDescriptor_YDrive_getQuota = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/getQuota',
  grpc.web.MethodType.UNARY,
  proto.yartu.GetQuotaRequest,
  proto.yartu.GetQuotaResponse,
  /**
   * @param {!proto.yartu.GetQuotaRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.GetQuotaResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.GetQuotaRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.GetQuotaResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.GetQuotaResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.getQuota =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/getQuota',
      request,
      metadata || {},
      methodDescriptor_YDrive_getQuota,
      callback);
};


/**
 * @param {!proto.yartu.GetQuotaRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.GetQuotaResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.getQuota =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/getQuota',
      request,
      metadata || {},
      methodDescriptor_YDrive_getQuota);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.GetRepoRequest,
 *   !proto.yartu.GetRepoResponse>}
 */
const methodDescriptor_YDrive_getRepo = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/getRepo',
  grpc.web.MethodType.UNARY,
  proto.yartu.GetRepoRequest,
  proto.yartu.GetRepoResponse,
  /**
   * @param {!proto.yartu.GetRepoRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.GetRepoResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.GetRepoRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.GetRepoResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.GetRepoResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.getRepo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/getRepo',
      request,
      metadata || {},
      methodDescriptor_YDrive_getRepo,
      callback);
};


/**
 * @param {!proto.yartu.GetRepoRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.GetRepoResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.getRepo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/getRepo',
      request,
      metadata || {},
      methodDescriptor_YDrive_getRepo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.UpsertRepoRequest,
 *   !proto.yartu.UpsertRepoResponse>}
 */
const methodDescriptor_YDrive_upsertRepo = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/upsertRepo',
  grpc.web.MethodType.UNARY,
  proto.yartu.UpsertRepoRequest,
  proto.yartu.UpsertRepoResponse,
  /**
   * @param {!proto.yartu.UpsertRepoRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.UpsertRepoResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.UpsertRepoRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.UpsertRepoResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.UpsertRepoResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.upsertRepo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/upsertRepo',
      request,
      metadata || {},
      methodDescriptor_YDrive_upsertRepo,
      callback);
};


/**
 * @param {!proto.yartu.UpsertRepoRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.UpsertRepoResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.upsertRepo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/upsertRepo',
      request,
      metadata || {},
      methodDescriptor_YDrive_upsertRepo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.DeleteRepoRequest,
 *   !proto.yartu.DeleteRepoResponse>}
 */
const methodDescriptor_YDrive_deleteRepo = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/deleteRepo',
  grpc.web.MethodType.UNARY,
  proto.yartu.DeleteRepoRequest,
  proto.yartu.DeleteRepoResponse,
  /**
   * @param {!proto.yartu.DeleteRepoRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.DeleteRepoResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.DeleteRepoRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.DeleteRepoResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.DeleteRepoResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.deleteRepo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/deleteRepo',
      request,
      metadata || {},
      methodDescriptor_YDrive_deleteRepo,
      callback);
};


/**
 * @param {!proto.yartu.DeleteRepoRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.DeleteRepoResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.deleteRepo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/deleteRepo',
      request,
      metadata || {},
      methodDescriptor_YDrive_deleteRepo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.ListRepoRequest,
 *   !proto.yartu.ListRepoResponse>}
 */
const methodDescriptor_YDrive_listRepo = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/listRepo',
  grpc.web.MethodType.UNARY,
  proto.yartu.ListRepoRequest,
  proto.yartu.ListRepoResponse,
  /**
   * @param {!proto.yartu.ListRepoRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.ListRepoResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.ListRepoRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.ListRepoResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.ListRepoResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.listRepo =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/listRepo',
      request,
      metadata || {},
      methodDescriptor_YDrive_listRepo,
      callback);
};


/**
 * @param {!proto.yartu.ListRepoRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.ListRepoResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.listRepo =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/listRepo',
      request,
      metadata || {},
      methodDescriptor_YDrive_listRepo);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.GetRepoHistoryRequest,
 *   !proto.yartu.GetRepoHistoryResponse>}
 */
const methodDescriptor_YDrive_getRepoHistory = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/getRepoHistory',
  grpc.web.MethodType.UNARY,
  proto.yartu.GetRepoHistoryRequest,
  proto.yartu.GetRepoHistoryResponse,
  /**
   * @param {!proto.yartu.GetRepoHistoryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.GetRepoHistoryResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.GetRepoHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.GetRepoHistoryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.GetRepoHistoryResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.getRepoHistory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/getRepoHistory',
      request,
      metadata || {},
      methodDescriptor_YDrive_getRepoHistory,
      callback);
};


/**
 * @param {!proto.yartu.GetRepoHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.GetRepoHistoryResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.getRepoHistory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/getRepoHistory',
      request,
      metadata || {},
      methodDescriptor_YDrive_getRepoHistory);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.GetRepoTrashRequest,
 *   !proto.yartu.GetRepoTrashResponse>}
 */
const methodDescriptor_YDrive_getRepoTrash = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/getRepoTrash',
  grpc.web.MethodType.UNARY,
  proto.yartu.GetRepoTrashRequest,
  proto.yartu.GetRepoTrashResponse,
  /**
   * @param {!proto.yartu.GetRepoTrashRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.GetRepoTrashResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.GetRepoTrashRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.GetRepoTrashResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.GetRepoTrashResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.getRepoTrash =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/getRepoTrash',
      request,
      metadata || {},
      methodDescriptor_YDrive_getRepoTrash,
      callback);
};


/**
 * @param {!proto.yartu.GetRepoTrashRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.GetRepoTrashResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.getRepoTrash =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/getRepoTrash',
      request,
      metadata || {},
      methodDescriptor_YDrive_getRepoTrash);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.GetDirentRequest,
 *   !proto.yartu.GetDirentResponse>}
 */
const methodDescriptor_YDrive_getDirent = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/getDirent',
  grpc.web.MethodType.UNARY,
  proto.yartu.GetDirentRequest,
  proto.yartu.GetDirentResponse,
  /**
   * @param {!proto.yartu.GetDirentRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.GetDirentResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.GetDirentRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.GetDirentResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.GetDirentResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.getDirent =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/getDirent',
      request,
      metadata || {},
      methodDescriptor_YDrive_getDirent,
      callback);
};


/**
 * @param {!proto.yartu.GetDirentRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.GetDirentResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.getDirent =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/getDirent',
      request,
      metadata || {},
      methodDescriptor_YDrive_getDirent);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.ListDirentRequest,
 *   !proto.yartu.ListDirentResponse>}
 */
const methodDescriptor_YDrive_listDirent = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/listDirent',
  grpc.web.MethodType.UNARY,
  proto.yartu.ListDirentRequest,
  proto.yartu.ListDirentResponse,
  /**
   * @param {!proto.yartu.ListDirentRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.ListDirentResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.ListDirentRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.ListDirentResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.ListDirentResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.listDirent =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/listDirent',
      request,
      metadata || {},
      methodDescriptor_YDrive_listDirent,
      callback);
};


/**
 * @param {!proto.yartu.ListDirentRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.ListDirentResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.listDirent =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/listDirent',
      request,
      metadata || {},
      methodDescriptor_YDrive_listDirent);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.StarDirentRequest,
 *   !proto.yartu.StarDirentResponse>}
 */
const methodDescriptor_YDrive_starDirent = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/starDirent',
  grpc.web.MethodType.UNARY,
  proto.yartu.StarDirentRequest,
  proto.yartu.StarDirentResponse,
  /**
   * @param {!proto.yartu.StarDirentRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.StarDirentResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.StarDirentRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.StarDirentResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.StarDirentResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.starDirent =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/starDirent',
      request,
      metadata || {},
      methodDescriptor_YDrive_starDirent,
      callback);
};


/**
 * @param {!proto.yartu.StarDirentRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.StarDirentResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.starDirent =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/starDirent',
      request,
      metadata || {},
      methodDescriptor_YDrive_starDirent);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.UpsertDirentRequest,
 *   !proto.yartu.UpsertDirentResponse>}
 */
const methodDescriptor_YDrive_upsertDirent = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/upsertDirent',
  grpc.web.MethodType.UNARY,
  proto.yartu.UpsertDirentRequest,
  proto.yartu.UpsertDirentResponse,
  /**
   * @param {!proto.yartu.UpsertDirentRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.UpsertDirentResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.UpsertDirentRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.UpsertDirentResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.UpsertDirentResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.upsertDirent =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/upsertDirent',
      request,
      metadata || {},
      methodDescriptor_YDrive_upsertDirent,
      callback);
};


/**
 * @param {!proto.yartu.UpsertDirentRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.UpsertDirentResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.upsertDirent =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/upsertDirent',
      request,
      metadata || {},
      methodDescriptor_YDrive_upsertDirent);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.DownloadDirentRequest,
 *   !proto.yartu.DownloadDirentResponse>}
 */
const methodDescriptor_YDrive_downloadDirent = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/downloadDirent',
  grpc.web.MethodType.UNARY,
  proto.yartu.DownloadDirentRequest,
  proto.yartu.DownloadDirentResponse,
  /**
   * @param {!proto.yartu.DownloadDirentRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.DownloadDirentResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.DownloadDirentRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.DownloadDirentResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.DownloadDirentResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.downloadDirent =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/downloadDirent',
      request,
      metadata || {},
      methodDescriptor_YDrive_downloadDirent,
      callback);
};


/**
 * @param {!proto.yartu.DownloadDirentRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.DownloadDirentResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.downloadDirent =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/downloadDirent',
      request,
      metadata || {},
      methodDescriptor_YDrive_downloadDirent);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.UpsertDirectoryRequest,
 *   !proto.yartu.UpsertDirectoryResponse>}
 */
const methodDescriptor_YDrive_upsertDirectory = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/upsertDirectory',
  grpc.web.MethodType.UNARY,
  proto.yartu.UpsertDirectoryRequest,
  proto.yartu.UpsertDirectoryResponse,
  /**
   * @param {!proto.yartu.UpsertDirectoryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.UpsertDirectoryResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.UpsertDirectoryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.UpsertDirectoryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.UpsertDirectoryResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.upsertDirectory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/upsertDirectory',
      request,
      metadata || {},
      methodDescriptor_YDrive_upsertDirectory,
      callback);
};


/**
 * @param {!proto.yartu.UpsertDirectoryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.UpsertDirectoryResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.upsertDirectory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/upsertDirectory',
      request,
      metadata || {},
      methodDescriptor_YDrive_upsertDirectory);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.UpsertFileRequest,
 *   !proto.yartu.UpsertFileResponse>}
 */
const methodDescriptor_YDrive_upsertFile = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/upsertFile',
  grpc.web.MethodType.UNARY,
  proto.yartu.UpsertFileRequest,
  proto.yartu.UpsertFileResponse,
  /**
   * @param {!proto.yartu.UpsertFileRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.UpsertFileResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.UpsertFileRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.UpsertFileResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.UpsertFileResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.upsertFile =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/upsertFile',
      request,
      metadata || {},
      methodDescriptor_YDrive_upsertFile,
      callback);
};


/**
 * @param {!proto.yartu.UpsertFileRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.UpsertFileResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.upsertFile =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/upsertFile',
      request,
      metadata || {},
      methodDescriptor_YDrive_upsertFile);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.UploadFileRequest,
 *   !proto.yartu.UploadFileResponse>}
 */
const methodDescriptor_YDrive_uploadFile = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/uploadFile',
  grpc.web.MethodType.UNARY,
  proto.yartu.UploadFileRequest,
  proto.yartu.UploadFileResponse,
  /**
   * @param {!proto.yartu.UploadFileRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.UploadFileResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.UploadFileRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.UploadFileResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.UploadFileResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.uploadFile =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/uploadFile',
      request,
      metadata || {},
      methodDescriptor_YDrive_uploadFile,
      callback);
};


/**
 * @param {!proto.yartu.UploadFileRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.UploadFileResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.uploadFile =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/uploadFile',
      request,
      metadata || {},
      methodDescriptor_YDrive_uploadFile);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.DownloadFileRequest,
 *   !proto.yartu.DownloadFileResponse>}
 */
const methodDescriptor_YDrive_downloadFile = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/downloadFile',
  grpc.web.MethodType.UNARY,
  proto.yartu.DownloadFileRequest,
  proto.yartu.DownloadFileResponse,
  /**
   * @param {!proto.yartu.DownloadFileRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.DownloadFileResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.DownloadFileRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.DownloadFileResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.DownloadFileResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.downloadFile =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/downloadFile',
      request,
      metadata || {},
      methodDescriptor_YDrive_downloadFile,
      callback);
};


/**
 * @param {!proto.yartu.DownloadFileRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.DownloadFileResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.downloadFile =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/downloadFile',
      request,
      metadata || {},
      methodDescriptor_YDrive_downloadFile);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.GetFileHistoryRequest,
 *   !proto.yartu.GetFileHistoryResponse>}
 */
const methodDescriptor_YDrive_getFileHistory = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/getFileHistory',
  grpc.web.MethodType.UNARY,
  proto.yartu.GetFileHistoryRequest,
  proto.yartu.GetFileHistoryResponse,
  /**
   * @param {!proto.yartu.GetFileHistoryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.GetFileHistoryResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.GetFileHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.GetFileHistoryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.GetFileHistoryResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.getFileHistory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/getFileHistory',
      request,
      metadata || {},
      methodDescriptor_YDrive_getFileHistory,
      callback);
};


/**
 * @param {!proto.yartu.GetFileHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.GetFileHistoryResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.getFileHistory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/getFileHistory',
      request,
      metadata || {},
      methodDescriptor_YDrive_getFileHistory);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.GetOfficeFileRequest,
 *   !proto.yartu.GetOfficeFileResponse>}
 */
const methodDescriptor_YDrive_getOfficeFile = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/getOfficeFile',
  grpc.web.MethodType.UNARY,
  proto.yartu.GetOfficeFileRequest,
  proto.yartu.GetOfficeFileResponse,
  /**
   * @param {!proto.yartu.GetOfficeFileRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.GetOfficeFileResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.GetOfficeFileRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.GetOfficeFileResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.GetOfficeFileResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.getOfficeFile =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/getOfficeFile',
      request,
      metadata || {},
      methodDescriptor_YDrive_getOfficeFile,
      callback);
};


/**
 * @param {!proto.yartu.GetOfficeFileRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.GetOfficeFileResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.getOfficeFile =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/getOfficeFile',
      request,
      metadata || {},
      methodDescriptor_YDrive_getOfficeFile);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.ListShareRequest,
 *   !proto.yartu.ListShareResponse>}
 */
const methodDescriptor_YDrive_listShare = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/listShare',
  grpc.web.MethodType.UNARY,
  proto.yartu.ListShareRequest,
  proto.yartu.ListShareResponse,
  /**
   * @param {!proto.yartu.ListShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.ListShareResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.ListShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.ListShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.ListShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.listShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/listShare',
      request,
      metadata || {},
      methodDescriptor_YDrive_listShare,
      callback);
};


/**
 * @param {!proto.yartu.ListShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.ListShareResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.listShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/listShare',
      request,
      metadata || {},
      methodDescriptor_YDrive_listShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.ShareRequest,
 *   !proto.yartu.ShareResponse>}
 */
const methodDescriptor_YDrive_share = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/share',
  grpc.web.MethodType.UNARY,
  proto.yartu.ShareRequest,
  proto.yartu.ShareResponse,
  /**
   * @param {!proto.yartu.ShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.ShareResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.ShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.ShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.ShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.share =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/share',
      request,
      metadata || {},
      methodDescriptor_YDrive_share,
      callback);
};


/**
 * @param {!proto.yartu.ShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.ShareResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.share =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/share',
      request,
      metadata || {},
      methodDescriptor_YDrive_share);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.UnshareRequest,
 *   !proto.yartu.UnshareResponse>}
 */
const methodDescriptor_YDrive_unshare = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/unshare',
  grpc.web.MethodType.UNARY,
  proto.yartu.UnshareRequest,
  proto.yartu.UnshareResponse,
  /**
   * @param {!proto.yartu.UnshareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.UnshareResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.UnshareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.UnshareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.UnshareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.unshare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/unshare',
      request,
      metadata || {},
      methodDescriptor_YDrive_unshare,
      callback);
};


/**
 * @param {!proto.yartu.UnshareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.UnshareResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.unshare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/unshare',
      request,
      metadata || {},
      methodDescriptor_YDrive_unshare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.DeleteShareRequest,
 *   !proto.yartu.DeleteShareResponse>}
 */
const methodDescriptor_YDrive_deleteShare = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/deleteShare',
  grpc.web.MethodType.UNARY,
  proto.yartu.DeleteShareRequest,
  proto.yartu.DeleteShareResponse,
  /**
   * @param {!proto.yartu.DeleteShareRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.DeleteShareResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.DeleteShareRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.DeleteShareResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.DeleteShareResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.deleteShare =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/deleteShare',
      request,
      metadata || {},
      methodDescriptor_YDrive_deleteShare,
      callback);
};


/**
 * @param {!proto.yartu.DeleteShareRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.DeleteShareResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.deleteShare =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/deleteShare',
      request,
      metadata || {},
      methodDescriptor_YDrive_deleteShare);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.SharedWithMeRequest,
 *   !proto.yartu.SharedWithMeResponse>}
 */
const methodDescriptor_YDrive_sharedWithMe = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/sharedWithMe',
  grpc.web.MethodType.UNARY,
  proto.yartu.SharedWithMeRequest,
  proto.yartu.SharedWithMeResponse,
  /**
   * @param {!proto.yartu.SharedWithMeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.SharedWithMeResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.SharedWithMeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.SharedWithMeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.SharedWithMeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.sharedWithMe =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/sharedWithMe',
      request,
      metadata || {},
      methodDescriptor_YDrive_sharedWithMe,
      callback);
};


/**
 * @param {!proto.yartu.SharedWithMeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.SharedWithMeResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.sharedWithMe =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/sharedWithMe',
      request,
      metadata || {},
      methodDescriptor_YDrive_sharedWithMe);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.yartu.SharedByMeRequest,
 *   !proto.yartu.SharedByMeResponse>}
 */
const methodDescriptor_YDrive_sharedByMe = new grpc.web.MethodDescriptor(
  '/yartu.YDrive/sharedByMe',
  grpc.web.MethodType.UNARY,
  proto.yartu.SharedByMeRequest,
  proto.yartu.SharedByMeResponse,
  /**
   * @param {!proto.yartu.SharedByMeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.yartu.SharedByMeResponse.deserializeBinary
);


/**
 * @param {!proto.yartu.SharedByMeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.yartu.SharedByMeResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.yartu.SharedByMeResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.yartu.YDriveClient.prototype.sharedByMe =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/yartu.YDrive/sharedByMe',
      request,
      metadata || {},
      methodDescriptor_YDrive_sharedByMe,
      callback);
};


/**
 * @param {!proto.yartu.SharedByMeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.yartu.SharedByMeResponse>}
 *     Promise that resolves to the response
 */
proto.yartu.YDrivePromiseClient.prototype.sharedByMe =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/yartu.YDrive/sharedByMe',
      request,
      metadata || {},
      methodDescriptor_YDrive_sharedByMe);
};


module.exports = proto.yartu;

